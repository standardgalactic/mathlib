/-
Copyright (c) 2022 Jo√´l Riou. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Jo√´l Riou
-/

import algebraic_topology.dold_kan.n_comp_gamma

/-!
> THIS FILE IS SYNCHRONIZED WITH MATHLIB4.
> Any changes to this file require a corresponding PR to mathlib4.
 The Dold-Kan equivalence for additive categories.

This file defines `preadditive.dold_kan.equivalence` which is the equivalence
of categories `karoubi (simplicial_object C) ‚âå karoubi (chain_complex C ‚Ñï)`.

-/

noncomputable theory

open category_theory category_theory.category category_theory.limits
  category_theory.idempotents algebraic_topology.dold_kan

variables {C : Type*} [category C] [preadditive C]

namespace category_theory

namespace preadditive

namespace dold_kan

/-- The functor `karoubi (simplicial_object C) ‚•§ karoubi (chain_complex C ‚Ñï)` of
the Dold-Kan equivalence for additive categories. -/
@[simps]
def N : karoubi (simplicial_object C) ‚•§ karoubi (chain_complex C ‚Ñï) := N‚ÇÇ

variable [has_finite_coproducts C]

/-- The inverse functor `karoubi (chain_complex C ‚Ñï) ‚•§ karoubi (simplicial_object C)` of
the Dold-Kan equivalence for additive categories. -/
@[simps]
def Œì : karoubi (chain_complex C ‚Ñï) ‚•§ karoubi (simplicial_object C) := Œì‚ÇÇ

/-- The Dold-Kan equivalence `karoubi (simplicial_object C) ‚âå karoubi (chain_complex C ‚Ñï)`
for additive categories. -/
@[simps]
def equivalence : karoubi (simplicial_object C) ‚âå karoubi (chain_complex C ‚Ñï) :=
{ functor := N,
  inverse := Œì,
  unit_iso := Œì‚ÇÇN‚ÇÇ,
  counit_iso := N‚ÇÇŒì‚ÇÇ,
  functor_unit_iso_comp' := Œª P, begin
    let Œ± := N.map_iso (Œì‚ÇÇN‚ÇÇ.app P),
    let Œ≤ := N‚ÇÇŒì‚ÇÇ.app (N.obj P),
    symmetry,
    change ùüô _ = Œ±.hom ‚â´ Œ≤.hom,
    rw [‚Üê iso.inv_comp_eq, comp_id, ‚Üê comp_id Œ≤.hom, ‚Üê iso.inv_comp_eq],
    exact algebraic_topology.dold_kan.identity_N‚ÇÇ_objectwise P,
  end }

end dold_kan

end preadditive

end category_theory
